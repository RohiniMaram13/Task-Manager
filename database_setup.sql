The Complete SQL Setup Commands
Step 1: Go to your Supabase project dashboard.

Step 2: Click on the SQL Editor icon (the page with SQL on it) in the left-hand menu.

Step 3: Click "+ New query".

Step 4: Copy the entire SQL code block below and paste it into the query window.

SQL

-- Create a table to store user profiles for the team
CREATE TABLE public.profiles (
  id uuid DEFAULT gen_random_uuid() NOT NULL PRIMARY KEY,
  created_at timestamptz DEFAULT now() NOT NULL,
  username text UNIQUE NOT NULL,
  is_active boolean DEFAULT true NOT NULL
);

-- Add a helpful comment to the table for documentation
COMMENT ON TABLE public.profiles IS 'Stores user profiles for the team.';

--------------------------------------------------------------------------------

-- Create the main table to store all our tasks
CREATE TABLE public.tasks (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at timestamptz DEFAULT now() NOT NULL,
  title text,
  priority text,
  due_date timestamptz,
  status text DEFAULT 'Pending'::text NOT NULL,
  details text,
  assigned_to text,
  completed_date timestamptz,
  -- NEW: This creates a link between this table and the profiles table
  CONSTRAINT tasks_assigned_to_fkey FOREIGN KEY (assigned_to) REFERENCES profiles (username) ON UPDATE CASCADE ON DELETE SET NULL
);

-- Add a helpful comment to the table for documentation
COMMENT ON TABLE public.tasks IS 'Stores all tasks for the application.';

--------------------------------------------------------------------------------

-- Add the initial default users into the new profiles table
INSERT INTO public.profiles (username)
VALUES ('Alex'), ('Brenda'), ('Charles');
Step 5: Click the big green "RUN" button.

What This Code Does
create table public.profiles: This creates your table for team members. We make the username unique so you can't have two users with the same name.
create table public.tasks: This creates your main tasks table. The new CONSTRAINT line is a "foreign key" â€“ an important rule that links the assigned_to column to a real user in the profiles table. This protects your data integrity.
insert into public.profiles: This adds your starting team members ("Alex", "Brenda", "Charles") so your app has data to begin with.
Once you run this script, your cloud database will be fully set up and ready to connect to your Streamlit application.
